# This is a basic workflow to help you get started with Actions

name: cmake

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on: 
  pull_request:
    branches: [ main, dev ]
  push:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug
  LOCAL: local

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container:
      image: hdevarajan92/hcl-deps:0.0.2
    strategy:
      fail-fast: false
      matrix:
        COMMUNICATION: ["THALLIUM"]
        PROTOCOL: ["OFI","UCX"]
    env:
      HCL_TEST_MACHINE: docker
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Push checkout
        if: github.event_name == 'push'
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: PR checkout
        if: github.event_name == 'pull_request'
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 2
      - name: Install additional packages
        run: |
          apt-get update
          apt-get install -y cmake gcovr check clang-format
      - name: Check code formatting
        run: |
          git config --global --add safe.directory '*'
          git clang-format HEAD~1 -q
          if git clang-format HEAD~1 -q | grep -m 1 '^' >/dev/null; then
              echo >&2 "Failed clang-format check. Run: git clang-format HEAD~1"
          exit 1
          fi
      - name: Build
        env:
          HCL_COMMUNICATION: ${{ matrix.COMMUNICATION }}
          HCL_COMMUNICATION_PROTOCOL: ${{matrix.PROTOCOL}}
        run: .github/install_hcl.sh
      - name: Test
        env:
          HCL_COMMUNICATION: ${{ matrix.COMMUNICATION }}
          HCL_COMMUNICATION_PROTOCOL: ${{matrix.PROTOCOL}}
        run: .github/run_hcl.sh
